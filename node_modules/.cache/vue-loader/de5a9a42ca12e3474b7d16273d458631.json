{"remainingRequest":"D:\\project\\pudu_project\\pdp-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\pudu_project\\pdp-web\\src\\components\\page\\gather\\gatherDolphin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\pudu_project\\pdp-web\\src\\components\\page\\gather\\gatherDolphin.vue","mtime":1635846216875},{"path":"D:\\project\\pudu_project\\pdp-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635841233847},{"path":"D:\\project\\pudu_project\\pdp-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1635841229970},{"path":"D:\\project\\pudu_project\\pdp-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635841233847},{"path":"D:\\project\\pudu_project\\pdp-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1635841317038}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\n\r\nimport {\r\n  selectDBByDatasource,\r\n  selectGatherDolphinList,\r\n  selectSyncType,\r\n  selectTableByDB,\r\n  offLineDolphinJob,\r\n  delJobOnDolphin,\r\n  createJobByTemplate,\r\n  createJobByJson,\r\n  syncDolphinJobJson,\r\n  initJob,\r\n  insertGatherDolphin, deleteGatherDolphin, updateGatherDolphinsInfo, onLineDolphinJob\r\n} from \"../../../api/gatherDolphin\";\r\nimport {selectAllDatasources, selectDataSourcesType} from \"../../../api/datasource\";\r\nimport vcrontab from 'vcrontab'\r\nimport {selectUserList} from \"../../../api/user\";\r\n\r\nimport vueJsonEditor from 'vue-json-editor'\r\n\r\nexport default {\r\n  name: 'gatherDolphinList',\r\n  data() {\r\n    return {\r\n      exeStartTime: '2015-09-02 12:23:10',\r\n      query: {\r\n        data: {},\r\n        currentPage: 1,\r\n        pageNumber: 10\r\n      },\r\n      jobJsonForm: [],\r\n      jobJsonVisible: false,\r\n      expression: \"\",\r\n      jobInfoJson: \"\",\r\n      showCron: false,\r\n      tableData: [],\r\n      datasourcesList: [],\r\n      datasourcesDBList: [],\r\n      inputDbList: [],\r\n      dolphinProjectList: [],\r\n      outputDbList: [],\r\n      tableList: [],\r\n      usersList: [],\r\n      dataSourcesTypeList: [],\r\n      databaseNameInput: '',\r\n      datasourceInput: '',\r\n      datasourceOutput: '',\r\n      multipleSelection: [],\r\n      editVisible: false,\r\n      addVisible: false,\r\n      pageTotal: 0,\r\n      addForm: {},\r\n      editForm: {},\r\n      editDolphinJsonFrom: {},\r\n      idx: -1\r\n    };\r\n  },\r\n  components: {\r\n    vcrontab,\r\n    vueJsonEditor,\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    crontabFill(value) {\r\n      this.crontab = value;\r\n    },\r\n    showDialog() {\r\n      this.expression = this.crontab;\r\n      \" this.expression \", this.expression;\r\n      this.showCron = true;\r\n    },\r\n    getData() {\r\n      selectAllDatasources().then(res => {\r\n        this.datasourcesList = res.data;\r\n      });\r\n      selectSyncType().then(res => {\r\n        this.syncTypeList = res.data;\r\n      });\r\n      selectUserList(this.query).then(res => {\r\n        this.usersList = res.data.list;\r\n      });\r\n      selectGatherDolphinList(this.query).then(res => {\r\n        this.tableData = res.data.list;\r\n        this.pageTotal = res.data.pageUtil.totalNumber || 50;\r\n      });\r\n    },\r\n    // 触发搜索按钮\r\n    handleSearch() {\r\n      this.$set(this.query, 'currentPage', 1);\r\n      this.getData();\r\n    },\r\n    // 删除操作\r\n    handleDelete(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要删除[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            deleteGatherDolphin({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 多选操作\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    delAllSelection() {\r\n      const length = this.multipleSelection.length;\r\n      if (length == 0) {\r\n        this.$message({\r\n          message: '请至少选择一条数据！',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n      let str = '';\r\n      let gatherContexts = '';\r\n      for (let i = 0; i < length; i++) {\r\n        if (i + 1 == length) {\r\n          str += this.multipleSelection[i].id\r\n          gatherContexts += this.multipleSelection[i].gatherContext\r\n        } else {\r\n          str += this.multipleSelection[i].id + ',';\r\n          gatherContexts += this.multipleSelection[i].gatherContext + ','\r\n        }\r\n      }\r\n      this.$confirm('确定要删除[' + gatherContexts + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            deleteGatherDolphin({ids: str}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n      this.multipleSelection = [];\r\n    },\r\n    // 添加操作\r\n    handleAdd() {\r\n      this.addVisible = true;\r\n    },\r\n    //异步请求db\r\n    inputDBAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.inputDbList = res.data;\r\n      });\r\n      this.datasourceInput = event\r\n    },\r\n    //异步请求db\r\n    outputDBAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.outputDbList = res.data;\r\n      });\r\n      this.datasourceOutput = event\r\n    },\r\n    //异步请求dolphin project list\r\n    inputDolphinAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.dolphinProjectList = res.data;\r\n      });\r\n    },\r\n\r\n    //异步请求table\r\n    inputTableAjax(event) {\r\n      selectTableByDB({id: this.datasourceInput, db: event}).then(res => {\r\n        this.tableList = res.data;\r\n      });\r\n    },\r\n    // 编辑操作\r\n    handleEdit(index, row) {\r\n      this.idx = index;\r\n      this.editForm = row;\r\n      selectDataSourcesType().then(res => {\r\n        this.dataSourcesTypeList = res.data;\r\n      });\r\n      this.editVisible = true;\r\n    },\r\n    //编辑json\r\n    handleJson: function (index, row) {\r\n      this.idx = index;\r\n      this.jobJsonForm = row;//jobJsonForm，即为模态框中显示的信息。\r\n      this.jobJsonVisible = true;//显示模态框\r\n    },\r\n    // 保存json\r\n    saveJson() {\r\n      updateGatherDolphinsInfo(this.jobJsonForm).then(res => {\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg)\r\n          this.jobJsonVisible = false;\r\n          this.getData();\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    // 保存新增\r\n    saveAdd(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          insertGatherDolphin(this.addForm).then(res => {\r\n            if (res.code == '200') {\r\n              this.$message.success(res.msg)\r\n              this.addVisible = false;\r\n              this.getData();\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 保存编辑\r\n    saveEdit(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          updateGatherDolphinsInfo(this.editForm).then(res => {\r\n            if (res.code == '200') {\r\n              this.$message.success(res.msg)\r\n              this.editVisible = false;\r\n              this.getData();\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 分页导航\r\n    handlePageChange(val) {\r\n      this.$set(this.query, 'currentPage', val);\r\n      this.getData();\r\n    },\r\n    // init任务\r\n    initJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要创建初始化[' + row.gatherContext + ']任务吗？创建完成后需要手动执行任务', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            initJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 上线任务\r\n    onLine(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            onLineDolphinJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 下线任务\r\n    offLine(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            offLineDolphinJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 删除dolphin任务\r\n    delJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            delJobOnDolphin({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 同步dolphin任务\r\n    syncDolphinJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('原有json会被覆盖，确定要同步[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'info'\r\n      })\r\n          .then(() => {\r\n            syncDolphinJobJson({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // createJobByJson\r\n    createJobByJson(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('原有任务会被删除，确定要通过json创建[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            createJobByJson({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // createJobByTemplate\r\n    createJobByTemplate(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要创建[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'info'\r\n      })\r\n          .then(() => {\r\n            createJobByTemplate({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["gatherDolphin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"gatherDolphin.vue","sourceRoot":"src/components/page/gather","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> Dolphin数据采集任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>Dolphin数据采集任务列表</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div class=\"handle-box\">\r\n        <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-delete\"\r\n            class=\"handle-del mr10\"\r\n            @click=\"delAllSelection\"\r\n        >批量删除\r\n        </el-button>\r\n        <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-lx-add\"\r\n            class=\"handle-del mr10\"\r\n            @click=\"handleAdd()\"\r\n        >添加\r\n        </el-button>\r\n        <el-input v-model=\"query.data.gather_context\" placeholder=\"任务说明\" class=\"handle-input mr10\" clearable></el-input>\r\n        <el-input v-model=\"query.data.database_name_input\" placeholder=\"输入数据源库名\" class=\"handle-input mr10\"\r\n                  clearable></el-input>\r\n        <el-select v-model=\"query.data.sync_type\" placeholder=\"同步方式\" class=\"handle-input mr10\" clearable>\r\n          <el-option\r\n              v-for=\"item in syncTypeList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.syncType\"\r\n              :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\r\n      </div>\r\n      <el-table\r\n          :data=\"tableData\"\r\n          border\r\n          class=\"table\"\r\n          ref=\"multipleTable\"\r\n          header-cell-class-name=\"table-header\"\r\n          @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"gatherJobId\" label=\"任务ID\"></el-table-column>\r\n        <el-table-column prop=\"gatherContext\" label=\"任务说明\"></el-table-column>\r\n        <el-table-column prop=\"datasourceInput\" label=\"输入数据源\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              datasourcesList.find((item) => {\r\n                return scope.row.datasourceInput === item.id;\r\n              }).dataSourceContext\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"databaseNameInput\" label=\"输入数据源库名\"></el-table-column>\r\n        <el-table-column prop=\"tableName\" label=\"输入数据源表名\"></el-table-column>\r\n        <el-table-column prop=\"datasourceOutput\" label=\"输出数据源\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              datasourcesList.find((item) => {\r\n                return scope.row.datasourceOutput === item.id;\r\n              }).dataSourceContext\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"syncType\" label=\"同步方式\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              syncTypeList.find((item) => {\r\n                return scope.row.syncType === item.id;\r\n              }).syncType\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"datasourceDolphin\" label=\"Dolphin源\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              datasourcesList.find((item) => {\r\n                return scope.row.datasourceDolphin === item.id;\r\n              }).dataSourceContext\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"dolphinProjectName\" label=\"Dolphin项目名\"></el-table-column>\r\n        <el-table-column prop=\"createHiveTable\" label=\"创建hive表\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n                :type=\"scope.row.createHiveTable===true?'success':(scope.row.createHiveTable===false?'info':'')\"\r\n            >{{ scope.row.createHiveTable === true ? 'YES' : (scope.row.createHiveTable === false ? 'NO' : '') }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"isOnline\" label=\"dolphin任务状态\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n                :type=\"scope.row.online===true?'success':(scope.row.online===false?'info':'')\"\r\n            >{{ scope.row.online === true ? 'onLine' : (scope.row.online === false ? 'offLine' : '') }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"crontab\" label=\"定时\"></el-table-column>\r\n        <el-table-column prop=\"gatherJobInfo\" label=\"Dolphin任务信息\">\r\n          <template scope=\"scope\">\r\n            <el-button v-if=\"scope.row.gatherJobInfo!=''\" @click=\"handleJson(scope.$index, scope.row)\" type=\"primary\" align=\"center\" size=\"small\">查看</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createUserId\" label=\"创建人\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              usersList.find((item) => {\r\n                return scope.row.createUserId === item.id;\r\n              }).userName\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateUserId\" label=\"更新人\">\r\n          <template slot-scope=\"scope\">\r\n            {{\r\n              usersList.find((item) => {\r\n                return scope.row.updateUserId === item.id;\r\n              }).userName\r\n            }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\"></el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"120\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-dropdown trigger=\"click\" split-button type=\"primary\">操作\r\n              <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item v-if=\"scope.row.syncType==2\" style=\"font-size: medium\" @click.native=\"initJob(scope.$index,scope.row)\">create init job\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"createJobByTemplate(scope.$index,scope.row)\">\r\n                  create job by temp\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"onLine(scope.$index,scope.row)\">上线任务\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"offLine(scope.$index,scope.row)\">下线任务\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"delJob(scope.$index,scope.row)\">删除任务\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"syncDolphinJob(scope.$index,scope.row)\">同步job\r\n                  json\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"createJobByJson(scope.$index,scope.row)\">\r\n                  create job by json\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"handleEdit(scope.$index,scope.row)\">编辑\r\n                </el-dropdown-item>\r\n                <el-dropdown-item style=\"font-size: medium\" @click.native=\"handleDelete(scope.$index,scope.row)\">删除\r\n                </el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n        <!--            <el-dropdown-menu slot=\"dropdown\">-->\r\n        <!--              <el-dropdown-item command=\"handleEdit\"><i class=\"el-icon-document-copy\"></i>编辑</el-dropdown-item>-->\r\n\r\n        <!--            </el-dropdown-menu>-->\r\n      </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, prev, pager, next\"\r\n            :current-page=\"query.pageIndex\"\r\n            :page-size=\"query.pageSize\"\r\n            :total=\"pageTotal\"\r\n            @current-change=\"handlePageChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <!--    job json编辑框-->\r\n    <el-dialog title=\" 修改job json\" :visible.sync=\"jobJsonVisible\" modal-append-to-body=\"false\">\r\n      <el-form ref=\"jobJson\" :model=\"jobJsonForm\" label-width=\"100px\">\r\n        <vue-json-editor label=\"job json\" prop=\"gatherJobInfo\" v-model=\"jobJsonForm.gatherJobInfo\"></vue-json-editor>\r\n        <el-form-item>\r\n          <template scope=\"scope\">\r\n                 <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"jobJsonVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"saveJson('jobJsonForm')\">修改</el-button>\r\n            </span>\r\n          </template>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 新增弹出框 -->\r\n    <el-dialog title=\"添加\" :visible.sync=\"addVisible\" width=\"25%\">\r\n      <el-form ref=\"addForm\" :model=\"addForm\" :rules=\"rules\" label-width=\"130px\">\r\n        <el-form-item label=\"任务说明\" prop=\"gather_context\" style=\"width: 69%\">\r\n          <el-input v-model=\"addForm.gatherContext\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源\" prop=\"datasource_input\">\r\n          <el-select v-model=\"addForm.datasourceInput\" v-on:change=\"inputDBAjax($event)\" placeholder=\"请选择输入数据源\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源库名\" prop=\"database_name_input\">\r\n          <el-select v-model=\"addForm.databaseNameInput\" v-on:change=\"inputTableAjax($event)\" placeholder=\"请选择输入数据源库名\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in inputDbList\"\r\n                :key=\"item.dbName\"\r\n                :label=\"item.dbName\"\r\n                :value=\"item.dbName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源表名\" prop=\"table_name\">\r\n          <el-select v-model=\"addForm.tableName\" placeholder=\"请选择输入数据源表名\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in tableList\"\r\n                :key=\"item.tableName\"\r\n                :label=\"item.tableName\"\r\n                :value=\"item.tableName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输出数据源(hive)\" prop=\"datasource_output\">\r\n          <el-select v-model=\"addForm.datasourceOutput\" placeholder=\"请选择输入数据源库名\" clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建hive表\" prop=\"create_hive_table\">\r\n          <el-select v-model=\"addForm.createHiveTable\" placeholder=\"请选择是否创建hive表\" clearable>\r\n            <el-option label=\"创建\" :value=true></el-option>\r\n            <el-option label=\"不创建\" :value=false></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"同步方式\" prop=\"sync_type\">\r\n          <el-select v-model=\"addForm.syncType\" placeholder=\"请选择同步方式\" clearable>\r\n            <el-option\r\n                v-for=\"item in syncTypeList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.syncType\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Dolphin源\" prop=\"datasource_dolphin\">\r\n          <el-select v-model=\"addForm.datasourceDolphin\" v-on:change=\"inputDolphinAjax($event)\"\r\n                     placeholder=\"请选择Dolphin源\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Dolphin项目名\" prop=\"dolphin_project_name\">\r\n          <el-select v-model=\"addForm.dolphinProjectName\" placeholder=\"请选择Dolphin项目名\" clearable filterable>\r\n            <el-option\r\n                v-for=\"item in dolphinProjectList\"\r\n                :key=\"item.dbName\"\r\n                :label=\"item.dbName\"\r\n                :value=\"item.dbName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"crontab表达式\" prop=\"crontab\">\r\n          <template>\r\n            <el-input v-model=\"addForm.crontab\" :autoFormCreate=\"addForm.crontab = this.crontab\"\r\n                      placeholder=\"请输入crontab表达式\" style=\"width: 59%\" clearable></el-input>&#8195;\r\n\r\n            <el-button type=\"primary\" @click=\"showDialog\">生成cron</el-button>\r\n            <el-dialog title=\"crontab配置\" :visible.sync=\"showCron\">\r\n              <vcrontab @hide=\"showCron=false\" @fill=\"crontabFill\" :expression=\"expression\"></vcrontab>\r\n            </el-dialog>\r\n          </template>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"saveAdd('addForm')\">确 定</el-button>\r\n            </span>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑弹出框 -->\r\n    <el-dialog title=\"编辑\" :visible.sync=\"editVisible\" width=\"25%\">\r\n      <el-form ref=\"editForm\" :model=\"editForm\" :rules=\"rules\" label-width=\"130px\">\r\n        <el-form-item label=\"任务说明\" prop=\"gather_context\" style=\"width: 69%\">\r\n          <el-input v-model=\"editForm.gatherContext\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源\" prop=\"datasource_input\">\r\n          <el-select v-model=\"editForm.datasourceInput\" v-on:change=\"inputDBAjax($event)\" placeholder=\"请选择输入数据源\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源库名\" prop=\"database_name_input\">\r\n          <el-select v-model=\"editForm.databaseNameInput\" v-on:change=\"inputTableAjax($event)\" placeholder=\"请选择输入数据源库名\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in inputDbList\"\r\n                :key=\"item.dbName\"\r\n                :label=\"item.dbName\"\r\n                :value=\"item.dbName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入数据源表名\" prop=\"table_name\">\r\n          <el-select v-model=\"editForm.tableName\" placeholder=\"请选择输入数据源表名\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in tableList\"\r\n                :key=\"item.tableName\"\r\n                :label=\"item.tableName\"\r\n                :value=\"item.tableName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"输出数据源(hive)\" prop=\"datasource_output\">\r\n          <el-select v-model=\"editForm.datasourceOutput\" placeholder=\"请选择输入数据源库名\" clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建hive表\" prop=\"create_hive_table\">\r\n          <el-select v-model=\"editForm.createHiveTable\" placeholder=\"请选择是否创建hive表\" clearable>\r\n            <el-option label=\"创建\" :value=true></el-option>\r\n            <el-option label=\"不创建\" :value=false></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"同步方式\" prop=\"sync_type\">\r\n          <el-select v-model=\"editForm.syncType\" placeholder=\"请选择同步方式\" clearable>\r\n            <el-option\r\n                v-for=\"item in syncTypeList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.syncType\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Dolphin源\" prop=\"datasource_dolphin\">\r\n          <el-select v-model=\"editForm.datasourceDolphin\" v-on:change=\"inputDolphinAjax($event)\"\r\n                     placeholder=\"请选择Dolphin源\"\r\n                     clearable filterable>\r\n            <el-option\r\n                v-for=\"item in datasourcesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataSourceContext\"\r\n                :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Dolphin项目名\" prop=\"dolphin_project_name\">\r\n          <el-select v-model=\"editForm.dolphinProjectName\" placeholder=\"请选择Dolphin项目名\" clearable filterable>\r\n            <el-option\r\n                v-for=\"item in dolphinProjectList\"\r\n                :key=\"item.dbName\"\r\n                :label=\"item.dbName\"\r\n                :value=\"item.dbName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"crontab表达式\" prop=\"crontab\">\r\n          <el-input v-model=\"editForm.crontab\" placeholder=\"请输入crontab表达式\" style=\"width: 59%\" clearable></el-input>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"saveEdit('editForm')\">确 定</el-button>\r\n            </span>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport {\r\n  selectDBByDatasource,\r\n  selectGatherDolphinList,\r\n  selectSyncType,\r\n  selectTableByDB,\r\n  offLineDolphinJob,\r\n  delJobOnDolphin,\r\n  createJobByTemplate,\r\n  createJobByJson,\r\n  syncDolphinJobJson,\r\n  initJob,\r\n  insertGatherDolphin, deleteGatherDolphin, updateGatherDolphinsInfo, onLineDolphinJob\r\n} from \"../../../api/gatherDolphin\";\r\nimport {selectAllDatasources, selectDataSourcesType} from \"../../../api/datasource\";\r\nimport vcrontab from 'vcrontab'\r\nimport {selectUserList} from \"../../../api/user\";\r\n\r\nimport vueJsonEditor from 'vue-json-editor'\r\n\r\nexport default {\r\n  name: 'gatherDolphinList',\r\n  data() {\r\n    return {\r\n      exeStartTime: '2015-09-02 12:23:10',\r\n      query: {\r\n        data: {},\r\n        currentPage: 1,\r\n        pageNumber: 10\r\n      },\r\n      jobJsonForm: [],\r\n      jobJsonVisible: false,\r\n      expression: \"\",\r\n      jobInfoJson: \"\",\r\n      showCron: false,\r\n      tableData: [],\r\n      datasourcesList: [],\r\n      datasourcesDBList: [],\r\n      inputDbList: [],\r\n      dolphinProjectList: [],\r\n      outputDbList: [],\r\n      tableList: [],\r\n      usersList: [],\r\n      dataSourcesTypeList: [],\r\n      databaseNameInput: '',\r\n      datasourceInput: '',\r\n      datasourceOutput: '',\r\n      multipleSelection: [],\r\n      editVisible: false,\r\n      addVisible: false,\r\n      pageTotal: 0,\r\n      addForm: {},\r\n      editForm: {},\r\n      editDolphinJsonFrom: {},\r\n      idx: -1\r\n    };\r\n  },\r\n  components: {\r\n    vcrontab,\r\n    vueJsonEditor,\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    crontabFill(value) {\r\n      this.crontab = value;\r\n    },\r\n    showDialog() {\r\n      this.expression = this.crontab;\r\n      \" this.expression \", this.expression;\r\n      this.showCron = true;\r\n    },\r\n    getData() {\r\n      selectAllDatasources().then(res => {\r\n        this.datasourcesList = res.data;\r\n      });\r\n      selectSyncType().then(res => {\r\n        this.syncTypeList = res.data;\r\n      });\r\n      selectUserList(this.query).then(res => {\r\n        this.usersList = res.data.list;\r\n      });\r\n      selectGatherDolphinList(this.query).then(res => {\r\n        this.tableData = res.data.list;\r\n        this.pageTotal = res.data.pageUtil.totalNumber || 50;\r\n      });\r\n    },\r\n    // 触发搜索按钮\r\n    handleSearch() {\r\n      this.$set(this.query, 'currentPage', 1);\r\n      this.getData();\r\n    },\r\n    // 删除操作\r\n    handleDelete(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要删除[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            deleteGatherDolphin({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 多选操作\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    delAllSelection() {\r\n      const length = this.multipleSelection.length;\r\n      if (length == 0) {\r\n        this.$message({\r\n          message: '请至少选择一条数据！',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n      let str = '';\r\n      let gatherContexts = '';\r\n      for (let i = 0; i < length; i++) {\r\n        if (i + 1 == length) {\r\n          str += this.multipleSelection[i].id\r\n          gatherContexts += this.multipleSelection[i].gatherContext\r\n        } else {\r\n          str += this.multipleSelection[i].id + ',';\r\n          gatherContexts += this.multipleSelection[i].gatherContext + ','\r\n        }\r\n      }\r\n      this.$confirm('确定要删除[' + gatherContexts + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            deleteGatherDolphin({ids: str}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n      this.multipleSelection = [];\r\n    },\r\n    // 添加操作\r\n    handleAdd() {\r\n      this.addVisible = true;\r\n    },\r\n    //异步请求db\r\n    inputDBAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.inputDbList = res.data;\r\n      });\r\n      this.datasourceInput = event\r\n    },\r\n    //异步请求db\r\n    outputDBAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.outputDbList = res.data;\r\n      });\r\n      this.datasourceOutput = event\r\n    },\r\n    //异步请求dolphin project list\r\n    inputDolphinAjax(event) {\r\n      selectDBByDatasource({id: event}).then(res => {\r\n        this.dolphinProjectList = res.data;\r\n      });\r\n    },\r\n\r\n    //异步请求table\r\n    inputTableAjax(event) {\r\n      selectTableByDB({id: this.datasourceInput, db: event}).then(res => {\r\n        this.tableList = res.data;\r\n      });\r\n    },\r\n    // 编辑操作\r\n    handleEdit(index, row) {\r\n      this.idx = index;\r\n      this.editForm = row;\r\n      selectDataSourcesType().then(res => {\r\n        this.dataSourcesTypeList = res.data;\r\n      });\r\n      this.editVisible = true;\r\n    },\r\n    //编辑json\r\n    handleJson: function (index, row) {\r\n      this.idx = index;\r\n      this.jobJsonForm = row;//jobJsonForm，即为模态框中显示的信息。\r\n      this.jobJsonVisible = true;//显示模态框\r\n    },\r\n    // 保存json\r\n    saveJson() {\r\n      updateGatherDolphinsInfo(this.jobJsonForm).then(res => {\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg)\r\n          this.jobJsonVisible = false;\r\n          this.getData();\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    // 保存新增\r\n    saveAdd(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          insertGatherDolphin(this.addForm).then(res => {\r\n            if (res.code == '200') {\r\n              this.$message.success(res.msg)\r\n              this.addVisible = false;\r\n              this.getData();\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 保存编辑\r\n    saveEdit(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          updateGatherDolphinsInfo(this.editForm).then(res => {\r\n            if (res.code == '200') {\r\n              this.$message.success(res.msg)\r\n              this.editVisible = false;\r\n              this.getData();\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 分页导航\r\n    handlePageChange(val) {\r\n      this.$set(this.query, 'currentPage', val);\r\n      this.getData();\r\n    },\r\n    // init任务\r\n    initJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要创建初始化[' + row.gatherContext + ']任务吗？创建完成后需要手动执行任务', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            initJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 上线任务\r\n    onLine(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            onLineDolphinJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 下线任务\r\n    offLine(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            offLineDolphinJob({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 删除dolphin任务\r\n    delJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要上线[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            delJobOnDolphin({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // 同步dolphin任务\r\n    syncDolphinJob(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('原有json会被覆盖，确定要同步[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'info'\r\n      })\r\n          .then(() => {\r\n            syncDolphinJobJson({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // createJobByJson\r\n    createJobByJson(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('原有任务会被删除，确定要通过json创建[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            createJobByJson({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n    // createJobByTemplate\r\n    createJobByTemplate(index, row) {\r\n      // 二次确认删除\r\n      this.$confirm('确定要创建[' + row.gatherContext + ']吗？', '提示', {\r\n        type: 'info'\r\n      })\r\n          .then(() => {\r\n            createJobByTemplate({ids: row.id}).then(res => {\r\n              if (res.code == '200') {\r\n                this.$message.success(res.msg)\r\n                this.addVisible = false;\r\n                this.getData();\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.handle-box {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.handle-select {\r\n  width: 120px;\r\n}\r\n\r\n.handle-input {\r\n  width: 300px;\r\n  display: inline-block;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  font-size: 14px;\r\n}\r\n\r\n.red {\r\n  color: #ff0000;\r\n}\r\n\r\n.mr10 {\r\n  margin-right: 10px;\r\n}\r\n\r\n.table-td-thumb {\r\n  display: block;\r\n  margin: auto;\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n\r\n</style>\r\n"]}]}